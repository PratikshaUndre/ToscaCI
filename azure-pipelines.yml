trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'

variables:
  projectName: 'SampleDex'
  environment: 'Dex'
  eventId: 'Test'
  testSetName: 'JSON Example'
  creator: 'AutomationUser'

steps:
- task: PowerShell@2
  name: CallToscaExecutionAPI
  inputs:
    targetType: 'inline'
    script: |
      # Authentication to get the access token
      $authUrl = "http://127.0.0.1:81/tua/connect/token"
      $clientId = "M9VqjcVcrEuoAgv90714eQ"
      $clientSecret = "Djdvho9h_EeihnFrFyzCDweKadNGM5FUeiv07kZVw6CA"

      $body = @{
          grant_type    = "client_credentials"
          client_id     = $clientId
          client_secret = $clientSecret
      }

      $response = Invoke-RestMethod -Uri $authUrl -Method Post -Body $body -ContentType "application/x-www-form-urlencoded"

      if (-not $response.access_token) {
        Write-Error "Failed to retrieve access token"
        exit 1
      }

      $token = $response.access_token
      Write-Host "Access token retrieved successfully"

      # Tosca execution API endpoint
      $uri = "http://localhost:5006/api/Execution/Enqueue"  # Replace with your actual Tosca API endpoint

      # Set the authorization header (Bearer token)
      $headers = @{
          "Authorization" = "Bearer $token"
          "Content-Type"  = "application/json"
      }

      # Prepare the JSON body for the request
      $body = @{
          "projectName" = $env:projectName
          "executionEnvironment" = $env:environment
          "events" = @(
              @{
                  "eventId" = $env:eventId
                  "parameters" = @{}
                  "characteristics" = @{}
              }
          )
          "importResult" = $true
          "creator" = $env:creator
      } | ConvertTo-Json -Depth 5

      # Send the POST request to start the execution
      $response = Invoke-RestMethod -Uri $uri -Method Post -Headers $headers -Body $body

      # Check the response and log the execution status
      if ($response.StatusCode -ne 200) {
          Write-Error "Failed to start execution: $($response.StatusCode)"
          exit 1
      }

      Write-Host "Execution started successfully: $($response.executionId)"
