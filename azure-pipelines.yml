# azure-pipelines.yml
trigger:
  - main

pool:
  name: Default

variables:
  - name: ToscaClientId
    value: '8p7RqVEK1km6Xj96INYY2g'
  - name: ToscaClientSecret
    value: '' # set this in pipeline UI and mark as secret

stages:
  - stage: RunTosca
    jobs:
      - job: RunToscaJob
        steps:
          - checkout: self

          - powershell: |
              $scriptPath = "$(Build.SourcesDirectory)\tosca_execution_client.ps1"
              Write-Host "Looking for script at: $scriptPath"
              if (-not (Test-Path -Path $scriptPath)) {
                Write-Error "Script not found at: $scriptPath"
                exit 1
              }
              try { Unblock-File -Path $scriptPath -ErrorAction SilentlyContinue } catch {}
              # Build args safely (secret is not printed)
              $args = @(
                '-toscaServerUrl', 'http://127.0.0.1:81/'
                '-events', '["Test"]'
                '-projectName', 'TestCI'
                '-clientId', '$(ToscaClientId)'
                '-clientSecret', '$(ToscaClientSecret)'
              )
              $quoted = $args | ForEach-Object {
                if ($_ -match '\s|["' + "'`]" ) { '"' + $_.Replace('"','\"') + '"' } else { $_ }
              } -join ' '
              Write-Host "Starting child PowerShell with ExecutionPolicy Bypass..."
              $psi = New-Object System.Diagnostics.ProcessStartInfo
              $psi.FileName = 'powershell.exe'
              $psi.Arguments = "-NoProfile -ExecutionPolicy Bypass -File `"$scriptPath`" $quoted"
              $psi.RedirectStandardOutput = $true
              $psi.RedirectStandardError  = $true
              $psi.UseShellExecute = $false
              $proc = [System.Diagnostics.Process]::Start($psi)
              $out = $proc.StandardOutput.ReadToEnd()
              $err = $proc.StandardError.ReadToEnd()
              $proc.WaitForExit()
              Write-Host $out
              if ($proc.ExitCode -ne 0) {
                Write-Error "Script failed with exit code $($proc.ExitCode). Stderr:`n$err"
                exit $proc.ExitCode
              } else {
                Write-Host "Script completed successfully."
              }
            displayName: 'Run tos ca_execution_client.ps1 (repo root, Bypass)'
